version: &version 0.2.${DRONE_BUILD_NUMBER}
env: &env
    APP_VERSION: *version
    CARGO_INCREMENTAL: "1"
    FRONT_END_URL: "http://localhost"
    BUILD_DIR: "api"
    TARI_URL: "TEST"
    COMMUNICATION_DEFAULT_SOURCE_EMAIL: "noreply@bigneon.com"
    COMMUNICATION_DEFAULT_SOURCE_PHONE: "0112223333"
    TOKEN_SECRET: travis_secret
    TOKEN_ISSUER: bg-on-travis
    STRIPE_SECRET_KEY: "sk_test_iGn9c6EJyuF3Gx0QH6uitQlb"
    SENDGRID_API_KEY: " "
    SENDGRID_TEMPLATE_BN_REFUND: "d-9ba23272db854578a5609e4e4c608f9f"
    SENDGRID_TEMPLATE_BN_USER_REGISTERED: "d-9ba23272db854578a5609e4e4c608f9f"
    SENDGRID_TEMPLATE_BN_PURCHASE_COMPLETED: "d-c23ba549dd0749bbb3b244b758c05dd7"
    SENDGRID_TEMPLATE_BN_ORG_INVITE: "d-19ea07c6169e4fe887b6527ef16cb1ea"
    SENDGRID_TEMPLATE_BN_TRANSFER_TICKETS: "d-f6a449f0281e404899eb4d580bc342a3"
    SENDGRID_TEMPLATE_BN_PASSWORD_RESET: "d-193ea5665fc54c8ca19c6325c8e46703"
    SENDGRID_TEMPLATE_BN_USER_INVITE: "d-fcf7791b781644a8960820058c9074fd"
    GH_USER_EMAIL: 'sdbondi@users.noreply.github.com'
    GH_USER_NAME: 'Travis CI'
    HTTP_KEEP_ALIVE: 75
    BLOCK_EXTERNAL_COMMS: 1
    TWILIO_ACCOUNT_ID: " "
    TWILIO_API_KEY: " "
    API_KEYS_ENCRYPTION_KEY: "test_key"
    GLOBEE_API_KEY: "GDFOzMkPAw79a8TCAHKkiknJB6bEYgbb"
    GLOBEE_BASE_URL: "https://test.globee.com/payment-api/v1/"
    IPN_BASE_URL: "TEST"

tests: &tests
  - name: cargo-audit
    depends_on: ["compile"]
    image: rust:1.31.1
    commands:
        - ./scripts/run-cargo-audit.sh

  - name: other-tests
    depends_on: ["compile"]
    image: rust:1.31.1
    environment:
        <<: *env
        DATABASE_URL: postgres://app:password@database/other_tests
        TEST_DATABASE_URL: postgres://app:password@database/other_tests
        TEST_DATABASE_ADMIN_URL: postgres://app:password@database/other_tests
    commands:
      - ./scripts/run-other-tests.sh

  - name: api-tests
    depends_on: ["compile"]
    image: rust:1.31.1
    environment:
        <<: *env
        DATABASE_URL: postgres://app:password@database/api_tests
        TEST_DATABASE_URL: postgres://app:password@database/api_tests
        TEST_DATABASE_ADMIN_URL: postgres://app:password@database/api_tests
    commands:
    - ./scripts/run-api-tests.sh

  - name: integration-tests
    depends_on: ["compile"]
    image: sdbondi/rust-node:0.1
    environment:
        <<: *env
        DATABASE_URL: postgres://app:password@database/integration_tests
        TEST_DATABASE_URL: postgres://app:password@database/integration_tests
        TEST_DATABASE_ADMIN_URL: postgres://app:password@database/integration_tests
    commands:
    - ./scripts/run-integration-tests.sh


kind: pipeline
name: Tests

steps:
    - name: restore-cache
      depends_on: ["clone"]
      image: plugins/s3-cache
      settings:
        restore: true
        endpoint: http://minio1:9000
        access_key:
            from_secret: access_key_id
        secret_key:
            from_secret: secret_access_key
        mount:
            - ./target
        fallback_path: drone/$DRONE_REPO_NAMESPACE/$DRONE_REPO_NAME/master/
        root: drone

    - name: bump-cargo-version
      depends_on: ["clone"]
      image: rust:1.31.1
      environment: *env
      commands:
          - ./scripts/set-version.sh {{*version}}
      when:
          branch: master
          event: push

    - name: compile
      depends_on: ["restore-cache"]
      image: rust:1.31.1
      environment: *env
      commands:
      - cargo build --release
      - test -x target/release/server
      - test -x target/release/bndb_cli

    - name: rebuild-cache
      depends_on:
          - compile
      image: plugins/s3-cache
      settings:
        rebuild: true
        endpoint: http://minio1:9000
        access_key:
            from_secret: access_key_id
        secret_key:
            from_secret: secret_access_key
        mount:
            - ./target
        root: drone

    - *tests

    - name: publish
      image: plugins/ecr
      depends_on:
          - cargo-audit
          - api-tests
          - integration-tests
          - other-tests
      settings:
        dockerfile: Dockerfile.drone
        tags:
          - latest
          - 0.2.${DRONE_BUILD_NUMBER}
        region:
            from_secret: aws_region
        repo:
            from_secret: docker_repo
        access_key:
            from_secret: aws_access_key_id
        secret_key:
            from_secret: aws_secret_access_key
      when:
          branch: master
          event: push

#    - name: deploy-dev
#      image: sdbondi/bn-deploy-step
#      settings:
#        aws_access_key_id:
#            from_secret: aws_access_key_id
#        aws_secret_access_key:
#            from_secret: aws_secret_access_key
#        function:
#            from_secret: aws_lambda_deploy_function
#        cargo_file: api/Cargo.toml
#        payload: |-
#            {"target": "staging", "tag": ""}

    - name: flush-cache
      depends_on:
        - rebuild-cache
      image: plugins/s3-cache
      settings:
        flush: true
        flush_age: 30
        endpoint: http://minio1:9000
        access_key:
            from_secret: access_key_id
        secret_key:
            from_secret: secret_access_key
        mount:
            - ./target
        root: drone


services:
    - name: database
      image: postgres:10.4
      environment:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: password

